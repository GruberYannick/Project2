class GameField extends HTMLElement{constructor(){super()}connectedCallback(){window.onresize=(()=>this.viewportUpdated()),document.querySelector("#setSize").addEventListener("click",t=>this.buttonClickedHandler("setSize")),this.columns=parseInt(this.getAttribute("width"),10),this.rows=parseInt(this.getAttribute("height"),10),this.columns=Math.max(10,this.columns),this.rows=Math.max(10,this.rows),this.setViewportValues();const t=Math.min(this.viewportWidth/this.columns,this.viewportHeight/this.rows);this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=this.createShadowCss(t);const e=this.createShadowGameField();this.shadowRoot.appendChild(e)}disconnectedCallback(){console.log("2 Custom square element added to page.")}adoptedCallback(){console.log("3 Custom square element added to page.")}attributeChangedCallback(t,e,s){console.log("4 Custom square element added to page.")}static get observedAttributes(){return["columns","rows"]}setViewportValues(){this.viewportWidth=Math.max(document.documentElement.clientWidth,window.innerWidth||0),this.viewportHeight=Math.max(document.documentElement.clientHeight,window.innerHeight||0)}createShadowGameField(){const t=document.createElement("div");t.className+="grid";for(let e=0;e<this.rows;e++){const e=document.createElement("div");e.className+="row";for(let t=0;t<this.columns;t++){const t=document.createElement("div");t.className+="box",e.appendChild(t)}t.appendChild(e)}return t}createShadowCss(t){return`<style>\n    .box {\n      box-sizing: border-box;\n      width: ${t}px;\n      height: ${t}px;\n      background-color: red;\n      float: left;\n      background-clip: content-box;\n      padding: 1px;\n    }\n\n    .row {\n      box-sizing: border-box;\n      width: ${t*this.columns}px;\n      height: ${t}px;\n      clear: both;\n      float: left;\n    }\n\n    .grid {\n      box-sizing: border-box;\n      width: ${t*this.columns}px;\n      height: ${t*this.rows}px;\n      margin: auto;\n    }`}buttonClickedHandler(t){switch(t){case"setSize":this.sizeUpdated()}}sizeUpdated(){this.columns=parseInt(document.getElementById("width").value,10),this.rows=parseInt(document.getElementById("height").value,10),this.columns=Math.max(10,this.columns),this.rows=Math.max(10,this.rows),document.getElementById("width").value=this.columns.toString(),document.getElementById("height").value=this.rows.toString();const t=Math.min(this.viewportWidth/this.columns,this.viewportHeight/this.rows);this.shadowRoot.innerHTML=this.createShadowCss(t);const e=this.createShadowGameField();this.shadowRoot.appendChild(e)}viewportUpdated(){this.setViewportValues();const t=Math.min(this.viewportWidth/this.columns,this.viewportHeight/this.rows);let e={};(e=this.shadowRoot.styleSheets[0]).cssRules[0].style.width=`${t}px`,e.cssRules[0].style.height=`${t}px`,e.cssRules[1].style.width=`${t*this.columns}px`,e.cssRules[1].style.height=`${t}px`,e.cssRules[2].style.width=`${t*this.columns}px`,e.cssRules[2].style.height=`${t*this.rows}px`}}window.customElements.define("cgol-pitch",GameField);